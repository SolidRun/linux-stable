* Renesas Multi-Function Timer Pulse Unit 3 (MTU3)

The MTU3 is a multi-purpose, multi-channel timer/counter with configurable
clock inputs and programmable compare match.

Channels share hardware resources but their counter and compare match value
are independent. The MTU3 hardware supports nine channels indexed from 0 to 8.

Required Properties:

 - compatible: must be one or more of the following:
   - "renesas,mtu3" for MTU3 in common Renesas SoC.

 - reg: base address and length of the registers block for the timer module.

 - interrupts: interrupt specifiers for the timer, one for each entry in
   interrupt-names.

 - interrupt-names: must contain entry names following hardware manuals
   corresponding to the interrupt sources.

 - clocks: a list of phandle + clock-specifier pairs, one for each entry
   in clock-names.

 - clock-names: must contain "fck" for the functional clock.

Example 1: Add configuration for MTU3 of R9A07G044L2 (RZ/G2L) SoC.

	mtu3: timer@10001200 {
		compatible = "renesas,rzg2l-mtu3";
		reg = <0 0x10001200 0 0xB00>;
		interrupts =
			<GIC_SPI 170 IRQ_TYPE_LEVEL_HIGH>;
		interrupt-names = "tgi0a";
		clocks = <&cpg CPG_MOD R9A07G044L_CLK_MTU>;
		clock-names = "fck";
	};

Optional properties:

 - pwm_mode1: Assign pwm mode1 for each timer channel with its output pin
   and expose pwm controller through sysfs. Format is:

   pwm_mode1 = <channel output>, ..;

   Where:
	- channel is number of timer channels outputing pwm signals in pwm mode 1.
	  Channels which support pwm mode 1 are 0, 1, 2, 3, 4, 6, 7.
	- output is number of output pins. output = 0 use MTIOCA, output = 1 use MTIOCC.

 - pwm_complementary: Assign complementary pwm for each timer channel with its output pin
   and expose pwm controller through sysfs. Format is:

   pwm_complementary = <channel output>, ..;

   Where:
	- channel is number of timer channels outputing complementary pwm. Channels which
	  support complementary pwm are 3, 4, 6, 7.
	- output is number of output pins. output = 0 exports complementary pwm in
	  MTIOCA and MTIOCC pins, output = 1 means MTIOCB and MTIOCD.

Example 2: Add optional properties for pwm_mode1 (MTIOC2A) and pwm_complementary (MTIOC3B-MTIOC3D
	   and MTIOC7A-MTIOC7C).

	&mtu3 {
		pinctrl-0 = <&mtu2_pins>, <&mtu3_pins>, <&mtu7_pins>;
		pinctrl-names = "default";
		pwm_mode1 = <2 0>;
		pwm_complementary = <3 1>, <7 0>;
		status = "okay";
	};

 - 16-bit_phase_counting: Assign 16-bit A/B phase counting for MTU3 channel1 and channel2, and
   expose IIO sysfs to interact with. Use this function along with MTLCK pins setting to count
   when signals change on these pins. Format is:

   16-bit_phase_counting = <indexes of MTU3 channels>;

Example 3: Add A/B phase counters by using channel1 and channel2 of MTU3.

	&mtu3 {
		16-bit_phase_counting = <1 2>;
	};

- 32-bit_phase_counting: Assign 32-bit phase counting for both MTU3 channel1 and channel2 at a
  same time, and expose IIO sysfs to interact with. Use this function along with MTLCK pins to
  count A/B signals and MTIOC1A pin to capture Z-phase to clear counter. To enable this property,
  add below line to MTU3 node in devicetree.

  32-bit_phase_counting;

NOTE: The order of priority of MTU3's properties decides the mode will be selected,
if 1 channel is assigned for more than 1 functions at a same time.

 1. 32-bit phase counter (32-bit_phase_counting).
 2. 16-bit phase counter (16-bit_phase_counting).
 3. PWM mode 1 (pwm_mode1).
 4. Complementary PWM functions (pwm_complementary).
 5. Clocksource and clockevent (these 2 functions will be automatically supported by the smallest
    index channels which have not been assgined for any special functions).

For example: If MTU3 channel1 is set for 16-bit phase counting and pwm mode 1 at a same time,
driver will assign phase counting function for this channel.
