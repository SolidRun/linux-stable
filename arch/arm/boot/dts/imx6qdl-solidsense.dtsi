/*
 * Copyright (C) 2015 Rabeeh Khoury <rabeeh@solid-run.com>
 *
 * This file is dual-licensed: you can use it either under the terms
 * of the GPL or the X11 license, at your option. Note that this dual
 * licensing only applies to this file, and not this project as a
 * whole.
 *
 *  a) This file is free software; you can redistribute it and/or
 *     modify it under the terms of the GNU General Public License
 *     version 2 as published by the Free Software Foundation.
 *
 *     This file is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 * Or, alternatively,
 *
 *  b) Permission is hereby granted, free of charge, to any person
 *     obtaining a copy of this software and associated documentation
 *     files (the "Software"), to deal in the Software without
 *     restriction, including without limitation the rights to use,
 *     copy, modify, merge, publish, distribute, sublicense, and/or
 *     sell copies of the Software, and to permit persons to whom the
 *     Software is furnished to do so, subject to the following
 *     conditions:
 *
 *     The above copyright notice and this permission notice shall be
 *     included in all copies or substantial portions of the Software.
 *
 *     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 *     EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 *     OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 *     NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 *     HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 *     WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 *     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 *     OTHER DEALINGS IN THE SOFTWARE.
 */

/ {
	/* Will be filled by the bootloader */
	memory@10000000 {
		device_type = "memory";
		reg = <0x10000000 0>;
	};

	chosen {
		stdout-path = &uart1;
	};

	ir_recv: ir-receiver {
		status = "disabled";
	};

	v_3v2: regulator-v-3v2 {
		compatible = "regulator-fixed";
		regulator-always-on;
		regulator-max-microvolt = <3300000>;
		regulator-min-microvolt = <3300000>;
		regulator-name = "v_3v2";
	};

	v_5v0: regulator-v-5v0 {
		compatible = "regulator-fixed";
		regulator-always-on;
		regulator-max-microvolt = <5000000>;
		regulator-min-microvolt = <5000000>;
		regulator-name = "v_5v0";
	};

	vcc_1p8: regulator-vcc-1p8 {
		compatible = "regulator-fixed";
		regulator-always-on;
		regulator-max-microvolt = <1800000>;
		regulator-min-microvolt = <1800000>;
		regulator-name = "vcc_1p8";
		vin-supply = <&v_3v2>;
	};

	v_sd: regulator-v-sd {
		compatible = "regulator-fixed";
		gpio = <&gpio4 30 GPIO_ACTIVE_HIGH>;
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_solidsense_vmmc>;
		regulator-boot-on;
		regulator-max-microvolt = <3300000>;
		regulator-min-microvolt = <3300000>;
		regulator-name = "v_sd_usdhc2";
		startup-delay-us = <1000>;
		vin-supply = <&v_3v2>;
	};

	v_usb1: regulator-v-usb1 {
		compatible = "regulator-fixed";
		enable-active-high;
		gpio = <&gpio3 22 GPIO_ACTIVE_HIGH>;
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_solidsense_usbotg_vbus>;
		regulator-always-on;
		regulator-max-microvolt = <5000000>;
		regulator-min-microvolt = <5000000>;
		regulator-name = "v_usb1";
		vin-supply = <&v_5v0>;
	};

/*
	v_usb2: regulator-v-usb2 {
		/* USB hub port 1 */
/*
		compatible = "regulator-fixed";
		enable-active-high;
		gpio = <&gpio1 0 GPIO_ACTIVE_HIGH>;
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_solidsense_usbh1_vbus>;
		regulator-always-on;
		regulator-max-microvolt = <5000000>;
		regulator-min-microvolt = <5000000>;
		regulator-name = "v_usb2";
		vin-supply = <&v_5v0>;
	};
*/

	leds {
		compatible = "gpio-leds";

		green1 {
			label = "green1";
			gpios = <&gpio3 6 GPIO_ACTIVE_HIGH>;
		};
		green2 {
			label = "green2";
			gpios = <&gpio3 11 GPIO_ACTIVE_HIGH>;
		};
		green3 {
			label = "green3";
			gpios = <&gpio3 12 GPIO_ACTIVE_HIGH>;
		};
	};
};

&audmux {
	status = "okay";
};

/*
&ecspi2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_solidsense_ecspi2>;
	cs-gpios = <&gpio2 26 0>;
	status = "okay";

	slb9670: slb9670@0 {
		compatible = "infineon,slb9670";
		reg = <0>; /* CE1 */
/*
		#address-cells = <1>;
		#size-cells = <0>;
		spi-max-frequency = <32000000>;
		status = "okay";
	};
};
*/

&i2c1 {
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_solidsense_i2c1>;
	status = "okay";

	expander0: gpio-expander@20 {
		compatible = "ti,tca6408";
		gpio-controller;
		#gpio-cells = <2>;
		reg = <0x20>;

		pcie1_3v3_en {
			gpio-hog;
			gpios = <0 GPIO_ACTIVE_LOW>;
			output-low;
			line-name = "pcie1.0-enable";
		};

		pcie2_3v3_en {
			gpio-hog;
			gpios = <1 GPIO_ACTIVE_LOW>;
			output-low;
			line-name = "pcie2.0-enable";
		};

		pcie1_reset {
			gpio-hog;
			gpios = <2 GPIO_ACTIVE_LOW>;
			output-low;
			line-name = "pcie1.0-reset";
		};

		pcie2_reset {
			gpio-hog;
			gpios = <3 GPIO_ACTIVE_LOW>;
			output-low;
			line-name = "pcie2.0-reset";
		};
	};

	rtc@69 {
		compatible = "abracon,ab1805";
		reg = <0x69>;
		abracon,tc-diode = "schottky";
		abracon,tc-resistor = <3>;
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_solidsense_gpio5_13>;
		interrupt-parent = <&gpio5>;
		interrupts = <217>;
	};

	adxl345@1d {
		compatible = "adi,adxl345";
		reg = <0x1d>;
/*
		interrupt-parent = <&irq_sec_vio>;
		interrupts = <0 15 0x04>;
*/
	};
};

&i2c2 {
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_solidsense_i2c2>;
	status = "okay";
};

&i2c3 {
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_solidsense_i2c3>;
	status = "okay";
};

&iomuxc {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_hog>;

	solidsense {
		pinctrl_hog: hoggrp {
		fsl,pins = <
				/*
				 * 36 pin headers GPIO description. The pins
				 * numbering as following -
				 *
				 * 	3.2v	5v	74	75
				 *	73	72	71	70
				 *	69	68	67	66
				 *
				 *	77	78	79	76
				 *	65	64	61	60
				 *	53	52	51	50
				 *	49	48	166	132
				 *	95	94	90	91
				 *	GND	54	24	204
				 *
				 * The GPIO numbers can be extracted using
				 * signal name from below.
				 * Example -
				 * MX6QDL_PAD_EIM_DA10__GPIO3_IO10 is
				 * GPIO(3,10) which is (3-1)*32+10 = gpio 74
				 *
				 * i.e. The mapping of GPIO(X,Y) to Linux gpio
				 * number is : gpio number = (X-1) * 32 + Y
				 */
				/* DI1_PIN15 */
				MX6QDL_PAD_EIM_DA10__GPIO3_IO10 0x400130b1
				/* DI1_PIN02 */
				MX6QDL_PAD_EIM_DA11__GPIO3_IO11 0x400130b1
				/* DISP1_DATA00 */
				MX6QDL_PAD_EIM_DA9__GPIO3_IO09 0x400130b1
				/* DISP1_DATA01 */
				MX6QDL_PAD_EIM_DA8__GPIO3_IO08 0x400130b1
				/* DISP1_DATA02 */
				MX6QDL_PAD_EIM_DA7__GPIO3_IO07 0x400130b1
				/* DISP1_DATA03 */
				MX6QDL_PAD_EIM_DA6__GPIO3_IO06 0x400130b1
				/* DISP1_DATA04 */
				MX6QDL_PAD_EIM_DA5__GPIO3_IO05 0x400130b1
				/* DISP1_DATA05 */
				MX6QDL_PAD_EIM_DA4__GPIO3_IO04 0x400130b1
				/* DISP1_DATA06 */
				MX6QDL_PAD_EIM_DA3__GPIO3_IO03 0x400130b1
				/* DISP1_DATA07 */
				MX6QDL_PAD_EIM_DA2__GPIO3_IO02 0x400130b1
				/* DI1_D0_CS */
				MX6QDL_PAD_EIM_DA13__GPIO3_IO13 0x400130b1
				/* DI1_D1_CS */
				MX6QDL_PAD_EIM_DA14__GPIO3_IO14 0x400130b1
				/* DI1_PIN03 */
				MX6QDL_PAD_EIM_DA12__GPIO3_IO12 0x400130b1
				/* DISP1_DATA08 */
				MX6QDL_PAD_EIM_DA1__GPIO3_IO01 0x400130b1
				/* DISP1_DATA09 */
				MX6QDL_PAD_EIM_DA0__GPIO3_IO00 0x400130b1
				/* DISP1_DATA10 */
				MX6QDL_PAD_EIM_EB1__GPIO2_IO29 0x400130b1
				/* DISP1_DATA11 */
				MX6QDL_PAD_EIM_EB0__GPIO2_IO28 0x400130b1
				/* DISP1_DATA13 */
				MX6QDL_PAD_EIM_A18__GPIO2_IO20 0x400130b1
				/* DISP1_DATA14 */
				MX6QDL_PAD_EIM_A19__GPIO2_IO19 0x400130b1
				/* DISP1_DATA15 */
				MX6QDL_PAD_EIM_A20__GPIO2_IO18 0x400130b1
				/* DISP1_DATA16 */
				MX6QDL_PAD_EIM_A21__GPIO2_IO17 0x400130b1
				/* DISP1_DATA17 */
				MX6QDL_PAD_EIM_A22__GPIO2_IO16 0x400130b1
				/* DISP1_DATA18 */
				MX6QDL_PAD_EIM_A23__GPIO6_IO06 0x400130b1
				/* DISP1_DATA19 */
				MX6QDL_PAD_EIM_A24__GPIO5_IO04 0x400130b1
				/* DISP1_DATA20 */
				/* MX6QDL_PAD_EIM_D31__GPIO3_IO31 0x400130b1 */
				/* DISP1_DATA21 */
				/* MX6QDL_PAD_EIM_D30__GPIO3_IO30 0x400130b1 */
				/* DISP1_DATA22 */
				MX6QDL_PAD_EIM_D26__GPIO3_IO26 0x400130b1
				/* DISP1_DATA23 */
				MX6QDL_PAD_EIM_D27__GPIO3_IO27 0x400130b1
				/* SPDIF_IN */
				MX6QDL_PAD_ENET_RX_ER__GPIO1_IO24 0x400130b1
				/* SPDIF_OUT */
				MX6QDL_PAD_GPIO_17__GPIO7_IO12 0x400130b1

				/* MikroBUS GPIO pin number 10 */
				MX6QDL_PAD_EIM_LBA__GPIO2_IO27 0x400130b1
			>;
		};

		pinctrl_solidsense_ecspi2: solidsense-ecspi2grp {
			fsl,pins = <
				MX6QDL_PAD_EIM_OE__ECSPI2_MISO	0x100b1
				MX6QDL_PAD_EIM_CS1__ECSPI2_MOSI	0x100b1
				MX6QDL_PAD_EIM_CS0__ECSPI2_SCLK	0x100b1
				MX6QDL_PAD_EIM_RW__GPIO2_IO26	0x000b1 /* CS */
			>;
		};

		pinctrl_solidsense_gpio5_13: solidsense-gpio5_13 {
			fsl,pins = <
				MX6QDL_PAD_DISP0_DAT19__GPIO5_IO13 0x80000000
			>;
		};

		pinctrl_solidsense_i2c1: solidsense-i2c1 {
			fsl,pins = <
				MX6QDL_PAD_EIM_D21__I2C1_SCL 0x4001b8b1
				MX6QDL_PAD_EIM_D28__I2C1_SDA 0x4001b8b1
			>;
		};

		pinctrl_solidsense_i2c2: solidsense-i2c2 {
			fsl,pins = <
				MX6QDL_PAD_KEY_COL3__I2C2_SCL 0x4001b8b1
				MX6QDL_PAD_KEY_ROW3__I2C2_SDA 0x4001b8b1
			>;
		};

		pinctrl_solidsense_i2c3: solidsense-i2c3 {
			fsl,pins = <
				MX6QDL_PAD_EIM_D17__I2C3_SCL 0x4001b8b1
				MX6QDL_PAD_EIM_D18__I2C3_SDA 0x4001b8b1
			>;
		};

		pinctrl_solidsense_mipi: solidsense_mipi {
			fsl,pins = <
				MX6QDL_PAD_SD4_DAT2__GPIO2_IO10 0x4001b8b1
				MX6QDL_PAD_KEY_COL4__GPIO4_IO14 0x4001b8b1
				MX6QDL_PAD_NANDF_CS2__CCM_CLKO2 0x130b0
			>;
		};

		pinctrl_solidsense_pcie_reset: solidsense-pcie-reset {
			fsl,pins = <
				MX6QDL_PAD_SD4_DAT3__GPIO2_IO11 0x1b0b1
			>;
		};

		pinctrl_solidsense_pwm1: pwm1grp {
			fsl,pins = <
				MX6QDL_PAD_DISP0_DAT8__PWM1_OUT 0x1b0b1
			>;
		};

		pinctrl_solidsense_pwm3: pwm3grp {
			fsl,pins = <
				MX6QDL_PAD_SD4_DAT1__PWM3_OUT 0x1b0b1
			>;
		};

		pinctrl_solidsense_usbh1_vbus: solidsense-usbh1-vbus {
			fsl,pins = <MX6QDL_PAD_GPIO_0__GPIO1_IO00 0x1b0b0>;
		};

		pinctrl_solidsense_usbotg_id: solidsense-usbotg-id {
			/*
			 * Similar to pinctrl_usbotg_2, but we want it
			 * pulled down for a fixed host connection.
			 */
			fsl,pins = <MX6QDL_PAD_GPIO_1__USB_OTG_ID 0x13059>;
		};

		pinctrl_solidsense_usbotg_vbus: solidsense-usbotg-vbus {
			fsl,pins = <MX6QDL_PAD_EIM_D22__GPIO3_IO22 0x1b0b0>;
		};

		pinctrl_solidsense_usdhc2: solidsense-usdhc2 {
			fsl,pins = <
				MX6QDL_PAD_SD2_CMD__SD2_CMD    0x17059
				MX6QDL_PAD_SD2_CLK__SD2_CLK    0x10059
				MX6QDL_PAD_SD2_DAT0__SD2_DATA0 0x17059
				MX6QDL_PAD_SD2_DAT1__SD2_DATA1 0x17059
				MX6QDL_PAD_SD2_DAT2__SD2_DATA2 0x17059
				MX6QDL_PAD_SD2_DAT3__SD2_DATA3 0x13059
			>;
		};

		pinctrl_solidsense_usdhc2_100mhz: solidsense-usdhc2-100mhz {
			fsl,pins = <
				MX6QDL_PAD_SD2_CMD__SD2_CMD    0x170b9
				MX6QDL_PAD_SD2_CLK__SD2_CLK    0x100b9
				MX6QDL_PAD_SD2_DAT0__SD2_DATA0 0x170b9
				MX6QDL_PAD_SD2_DAT1__SD2_DATA1 0x170b9
				MX6QDL_PAD_SD2_DAT2__SD2_DATA2 0x170b9
				MX6QDL_PAD_SD2_DAT3__SD2_DATA3 0x130b9
			>;
		};

		pinctrl_solidsense_usdhc2_200mhz: solidsense-usdhc2-200mhz {
			fsl,pins = <
				MX6QDL_PAD_SD2_CMD__SD2_CMD    0x170f9
				MX6QDL_PAD_SD2_CLK__SD2_CLK    0x100f9
				MX6QDL_PAD_SD2_DAT0__SD2_DATA0 0x170f9
				MX6QDL_PAD_SD2_DAT1__SD2_DATA1 0x170f9
				MX6QDL_PAD_SD2_DAT2__SD2_DATA2 0x170f9
				MX6QDL_PAD_SD2_DAT3__SD2_DATA3 0x130f9
			>;
		};

		pinctrl_solidsense_vmmc: solidsense-vmmc {
			fsl,pins = <
				MX6QDL_PAD_DISP0_DAT9__GPIO4_IO30 0x1b0b0
			>;
		};

		pinctrl_solidsense_jody_bt_en: solidsense-jody-bt-en {
			fsl,pins = <
				/* Jody W164 Bluetooth enable */
				MX6QDL_PAD_EIM_A22__GPIO2_IO16 0x1b0b1
			>;
		};

		pinctrl_solidsense_jody_wifi_en: solidsense-jody-wifi-en {
			fsl,pins = <
				/* Jody W164 WiFi enable */
				MX6QDL_PAD_EIM_A21__GPIO2_IO17 0x400130b1
			>;
		};

		pinctrl_solidsense_uart1: solidsense-uart1 {
			fsl,pins = <
				MX6QDL_PAD_CSI0_DAT10__UART1_TX_DATA 0x1b0b0
				MX6QDL_PAD_CSI0_DAT11__UART1_RX_DATA 0x1b0b0
			>;
		};

		pinctrl_solidsense_uart1_rtscts: solidsense-uart1-rtscts {
			fsl,pins = <
				MX6QDL_PAD_EIM_D20__UART1_RTS_B 0x1b0b0
				MX6QDL_PAD_EIM_D19__UART1_CTS_B 0x1b0b0
			>;
		};

		pinctrl_solidsense_uart5: solidsense-uart5 {
			fsl,pins = <
				MX6QDL_PAD_KEY_COL1__UART5_RX_DATA 0x1b0b0
				MX6QDL_PAD_KEY_ROW1__UART5_TX_DATA 0x1b0b0
			>;
		};

		pinctrl_solidsense_uart5_gpio: solidsense-uart5-gpio {
			fsl,pins = <
				MX6QDL_PAD_EIM_DA0__GPIO3_IO00 0x400130b1 /* Ublox mainboard SWDCLK */
				MX6QDL_PAD_EIM_DA1__GPIO3_IO01 0x400130b1 /* Ublox mainboard SDIO */
				MX6QDL_PAD_EIM_DA2__GPIO3_IO02 0x400130b1 /* Ublox UART_WAKE */
				MX6QDL_PAD_EIM_DA3__GPIO3_IO03 0x400130b1 /* Ublox RESET */
			>;
		};
	};
};

&pcie {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_solidsense_pcie_reset>;
	reset-gpio = <&gpio2 11 GPIO_ACTIVE_LOW>;
	reset-name = "pci-reset";
	status = "okay";
};

&pwm1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_solidsense_pwm1>;
	status = "okay";
};

&pwm3 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_solidsense_pwm3>;
	status = "okay";
};

&ssi1 {
	status = "okay";
};

&usbh1 {
	disable-over-current;
	status = "okay";
};

&usbotg {
	disable-over-current;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_solidsense_usbotg_id>;
	vbus-supply = <&v_usb1>;
	status = "okay";
};

&usdhc2 {
	pinctrl-names = "default";
	pinctrl-0 = <
		&pinctrl_solidsense_usdhc2
	>;
	vmmc-supply = <&v_sd>;
	cd-gpios = <&gpio1 4 GPIO_ACTIVE_LOW>;
	status = "okay";
};

&uart1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_solidsense_uart1 &pinctrl_solidsense_uart1_rtscts>;
	uart-has-rtscts;
	status = "okay";
};

&uart5 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_solidsense_uart5>;
	fsl,dte-mode;
	status = "okay";
};

/*
&can1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_solidsense_flexcan1>;
	status = "okay";
};
*/

&vcc_3v3 {
	vin-supply = <&v_3v2>;
};
