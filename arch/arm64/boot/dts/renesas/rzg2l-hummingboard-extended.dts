// SPDX-License-Identifier: (GPL-2.0-only OR BSD-2-Clause)
/*
 * Device Tree Source for the RZ/G2LC Solidrun SOM
 *
 * Copyright (C) 2021 Renesas Electronics Corp.
 */

#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/pinctrl/rzg2l-pinctrl.h>

/*
 * DIP-Switch S3 setting on SoM
 * 1 : High; 0: Low
 * S3[1] : SW_SD0_DEV_SEL	(1: eMMC; 0: uSD)
 */

#define SW_SD0_DEV_SEL	1

/dts-v1/;
#include "rzg2l-sr-som.dtsi"
#include "rzg2l-sr-pinfunction.dtsi"

/ {
	model = "Solidrun RZ/G2L HummingBaord-Extended";
	compatible = "renesas,r9a07g044l2", "renesas,r9a07g044";

	x1_clk: x1-clock {
		compatible = "fixed-clock";
		#clock-cells = <0>;
		clock-frequency = <24000000>;
	};

	hdmi-out {
		compatible = "hdmi-connector";
		type = "d";

		port {
			hdmi_con_out: endpoint {
			remote-endpoint = <&adv7535_out>;
			};
		};
	};
};

&pinctrl {
	gpio-sd0-pwr-en-hog {
		gpio-hog;
		gpios = <RZG2L_GPIO(4, 1) GPIO_ACTIVE_HIGH>;
		output-high;
		line-name = "gpio_sd0_pwr_en";
	};

	gpio-lte_on {
		gpio-hog;
		gpios = <RZG2L_GPIO(17, 0) GPIO_ACTIVE_HIGH>;
		output-high;
		line-name = "gpio_lte_on";
	};

	gpio-lte_reset {
		gpio-hog;
		gpios = <RZG2L_GPIO(42, 2) GPIO_ACTIVE_HIGH>;
		output-high;
		line-name = "gpio_lte_reset";
	};

	/*
	 * The below switch logic can be used to select the device between
	 * eMMC and microSD, after setting GPIO_SD0_DEV_SEL to high in DT.
	 * HB-Ripple: S3[1] should be at OFF position to enable eMMC
	 * HB-Ripple: S3[1] should be at position ON to enable uSD card
	 */
	
	/*
	 * TODO: implement device-selection for SolidRun SoM / Carrier
	 *
	 * gpio-sd0-dev-sel-hog {
	 * 	gpio-hog;
	 * 	gpios = <RZG2L_GPIO(22, 1) GPIO_ACTIVE_HIGH>;
	 * 	output-high;
	 * 	line-name = "gpio_sd0_dev_sel";
	 * };
	 */

};

&i2c0 {
	adv7535@3d {
		compatible = "adi,adv7533";
		reg = <0x3d>;
		adi,addr-cec = <0x3c>;
		adi,dsi-lanes = <4>;
		adi,addr-edid = <0x3b>;
		pd-gpios = <&pinctrl RZG2L_GPIO(40, 2) GPIO_ACTIVE_LOW>; // ADV_PD / DSI_EN J9-34 / P40_2
		/*
		 * With interrupts enabled and hdmi connected during boot,
		 * rzg2l_mipi_dsi_enable never happens and display receives no signal.
		 * Re-enable once issue has been resolved.
		 *
		 * interrupt-parent = <&pinctrl>;
		 * interrupts = <RZG2L_GPIO(42, 2) IRQ_TYPE_EDGE_FALLING>; // DSI_TS_nINT J5001-43 P42_2
		 */
		status = "okay";

		ports {
			#address-cells = <1>;
			#size-cells = <0>;

			port@0 {
				reg = <0>;
				adv7535_in: endpoint@0 {
					remote-endpoint = <&dsi0_out>;
				};
			};

			port@1 {
				reg = <1>;
				adv7535_out: endpoint@1 {
					remote-endpoint = <&hdmi_con_out>;
				};
			};

			port@2 {
				reg = <2>;
				codec_endpoint: endpoint {
					/* Audio signals not connected. */
				};
			};
		};
	};

	rtc@69 {
		compatible = "abracon,abx80x";
		reg = <0x69>;
		abracon,tc-diode = "schottky";
		abracon,tc-resistor = <3>;
	};

	eeprom_carrier: eeprom@57 {
		compatible = "st,24c02", "atmel,24c02";
		reg = <0x57>;
		pagesize = <16>;
	};

};

&dsi0 {
	status = "okay";
};

&dsi0_out {
	remote-endpoint = <&adv7535_in>;
	data-lanes = <1 2 3 4>;
};

&du {
	status = "okay";
};

&scif1 {
	pinctrl-0 = <&scif1_pins>;
	pinctrl-names = "default";

	//uart-has-rtscts;
	status = "okay";
};

&canfd {
	/delete-property/ pinctrl-0;
	/delete-property/ pinctrl-names;
	status = "disabled";
};

&spi1 {
	/delete-property/ pinctrl-0;
	/delete-property/ pinctrl-names;
	status = "disabled";
};

&usb0_vbus_otg {
	gpio = <&pinctrl RZG2L_GPIO(4, 0) GPIO_OPEN_DRAIN>;
	gpio-open-drain;
};

&usb1_vbus {
	gpio = <&pinctrl RZG2L_GPIO(42, 0) GPIO_OPEN_DRAIN>;
	gpio-open-drain;
};
